#!/bin/bash
#

set -eou pipefail

ESC=$(printf '\033')
# set of colors for output. We rotate through them and re-use.
COLORS=("[31m" "[32m" "[33m" "[34m" "[35m") # TODO: MORE COLORS!
RESET_COLOR="[0m"

# helpers
usage() {
  echo "Usage: $0 [kubectl-get-args]"
  echo
  echo "[kubectl-get-args] will be passed directly to 'kubectl get' in order to find pods and containers to tail, examples:"
  echo
  echo "- Tail all containers with the label 'app=hermes' in current namespace:"
  echo "   kube-tail -l app=hermes"
  echo
  echo "- Tail all containers with the label 'app=hermes' in sandbox-joe namespace:"
  echo "   kube-tail -l app=hermes --namespace=sandbox-joe"
  echo
  echo "- Tail all containers with the labels 'app=hermes,state=serving' in current namespace:"
  echo "   kube-tail -l app=hermes,state=serving"
  # TODO: make --timestamps optional
}

shutdown(){
  echo "Stopping"
  trap - SIGINT SIGTERM  # reset handler to avoid loops
  kill -TERM 0
}

# this func uses a go-template to print a newline terminated list of "namespace:pod:container"
# for example, a pod named 'foo' with containers 'nginx, app, proxy' would render as:
#  production:foo:nginx
#  production:foo:app
#  production:foo:proxy
list_containers() {
  local selector="$1"
  kubectl get pod $selector \
    -o go-template='{{ range .items }}{{$pod := .metadata.name}}{{$ns := .metadata.namespace}}{{ range .spec.containers }}{{$ns}}{{":"}}{{$pod}}{{":"}}{{.name}}{{"\n"}}{{ end }}{{ end }}'
}

main() {
  local selector="${*:-}"

  if [[ -z "$selector" ]]; then
    usage
    exit 1
  fi

  # ensure we cleanup the `kubectl logs -f` procs that will be fork'd (&)
  trap shutdown SIGINT SIGTERM

  # for each container in each matching pod, start a `kubectl logs -f ... &`
  local cnt=0
  for i in $(list_containers "$selector"); do
    local ns=''
    local pod=''
    local container=''
    ns=$(awk -F: '{print $1}' <<< "$i")
    pod=$(awk -F: '{print $2}' <<< "$i")
    container=$(awk -F: '{print $3}' <<< "$i")

    # pick a color from the $COLORS array
    local color_idx=$(( cnt % ${#COLORS[@]} ))
    local color="${COLORS[$color_idx]}"

    # created a fixed length prefix containing the container name for each line of log output
    local line_prefix=''
    line_prefix=$(printf "|%-27s | " "$pod::$container")

    (kubectl logs --tail=10 --timestamps=false --follow -c "$container" "$pod" "--namespace=$ns" 2>&1 \
       | sed "s/^/${ESC}${color}${line_prefix}/; s/$/${ESC}${RESET_COLOR}/") &

    cnt=$((cnt + 1))
  done

  # wait for all the forked kubectl procs
  wait
}

main "$@"
